// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  carts     Cart[]
  bookings  Booking[]
}

model Product {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  price          Float
  originalPrice  Float?
  image          String
  category       Category   @default(apparel)
  discount       Int?
  cartItems      CartItem[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @db.ObjectId
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  cart      Cart      @relation(fields: [cartId], references: [id])
  cartId    String    @db.ObjectId
  product   Product   @relation(fields: [productId], references: [id])
  productId String    @db.ObjectId
  quantity  Int       @default(1)
  createdAt DateTime  @default(now())
}

model Order {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  customerPhone String
  totalAmount   Float
  status        String
  items         Json[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Booking {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  phone          String
  user           User?    @relation(fields: [userId], references: [id])
  userId         String?  @db.ObjectId
  tickets        Json[]   // Embedded ticket details
  quantity       Int
  totalAmount    Float
  status         String   @default("pending")
  isGroupBooking Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Category {
  jerseys
  apparel
  accessories
}

enum OrderStatus {
  pending
  processing
  completed
  cancelled
}

enum BookingStatus {
  pending
  confirmed
  cancelled
}